/**
 * 
 */
package com.datang.util;

import java.util.HashMap;
import java.util.Map;

/**
 * @author songzhigang
 * 
 */
public class CommandMap {

	private static final Map<String, String> COMMAND_MAP = new HashMap<String, String>();

	static {
		// COMMAND_MAP.put("0x0500", "GSM/TD_SCDMA/WCDMA/LTE");
		// COMMAND_MAP.put("0x0501", "GSM/TD_SCDMA/WCDMA/LTE");
		// COMMAND_MAP.put("0x0502", "GSM/TD_SCDMA/WCDMA/CDMA/EVDO/LTE");
		// COMMAND_MAP.put("0x0602", "GSM/TD_SCDMA");
		// COMMAND_MAP.put("0x0603", "GSM/TD_SCDMA");
		// COMMAND_MAP.put("0x0604", "GSM/TD_SCDMA/CDMA/EVDO/LTE");
		// COMMAND_MAP.put("0x0605", "GSM/TD_SCDMA");
		// COMMAND_MAP.put("0x0606", "GSM/TD_SCDMA/CDMA/EVDO");
		// COMMAND_MAP.put("0x0607", "GSM/TD_SCDMA/CDMA/EVDO");
		// COMMAND_MAP.put("0x0608", "GSM/TD_SCDMA/CDMA/EVDO");
		// COMMAND_MAP.put("0x0609", "GSM/TD_SCDMA");
		// COMMAND_MAP.put("0x060A", "GSM/TD_SCDMA");
		// COMMAND_MAP.put("0x060B", "GSM/TD_SCDMA");
		// COMMAND_MAP.put("0x060C", "GSM/TD_SCDMA/WCDMA/CDMA/EVDO/LTE");
		// COMMAND_MAP.put("0x060D", "GSM/TD_SCDMA");
		// COMMAND_MAP.put("0x060E", "GSM/TD_SCDMA");
		// COMMAND_MAP.put("0x060F", "GSM/TD_SCDMA/CDMA/EVDO");
		// COMMAND_MAP.put("0x0611", "GSM/TD_SCDMA");
		// COMMAND_MAP.put("0x0612", "GSM/TD_SCDMA/CDMA/EVDO");
		// COMMAND_MAP.put("0x0613", "GSM/TD_SCDMA/CDMA/EVDO");
		// COMMAND_MAP.put("0x0701", "TD_SCDMA");
		// COMMAND_MAP.put("0x0702", "TD_SCDMA");
		// COMMAND_MAP.put("0x0800", "CDMA/EVDO");
		// COMMAND_MAP.put("0x0801", "CDMA/EVDO");
		// COMMAND_MAP.put("0x0802", "CDMA/EVDO");
		// COMMAND_MAP.put("0x0803", "CDMA/EVDO");
		/**
		 * 2015-07-08 modify by yinzhipeng 除了wlan的业务类型,其他都不限制
		 */
		COMMAND_MAP.put("0x0500", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0501", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0502", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0602", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0603", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0604", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0605", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0606", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0607", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0608", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0609", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x060A", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x060B", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x060C", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x060D", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x060E", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x060F", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0611", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0612", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0613", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0620", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0700", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0701", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0800", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0801", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0802", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");
		COMMAND_MAP.put("0x0803", "GSM/TDS/WCDMA/CDMA/EVDO/TD_LTE/FDD_LTE/APP_FG");

		COMMAND_MAP.put("0x0901", "WLAN");
		COMMAND_MAP.put("0x0902", "WLAN");
		COMMAND_MAP.put("0x0903", "WLAN");
		COMMAND_MAP.put("0x0904", "WLAN");
		COMMAND_MAP.put("0x0905", "WLAN");
	}

	public static String getNetType(String commandId) {
		return COMMAND_MAP.get(commandId);
	}

	/**
	 * GSM/TD/WCDMA/CDMA语音主叫 ..
	 * 
	 * @param commandId
	 * @return
	 */
	public static boolean isNeedSetCallNumber(String commandId) {
		return "0x0500".equals(commandId) || "0x0800".equals(commandId);
	}

	/**
	 * TD视频电话主叫测试
	 * 
	 * @param commandId
	 * @return
	 */
	public static boolean isNeedSetPhoneNumber(String commandId) {
		return "0x0701".equals(commandId);
	}

}
